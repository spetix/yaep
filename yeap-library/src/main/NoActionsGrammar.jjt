/**
 * JavaCC template file created by SF JavaCC plugin 1.5.17+ wizard for JavaCC 1.5.0+
 */
options
{
  JDK_VERSION = "1.7";
  STATIC = false;
  FORCE_LA_CHECK = true;
  DEBUG_PARSER = true;
  DEBUG_LOOKAHEAD = true;
  DEBUG_TOKEN_MANAGER = true;
 
}


PARSER_BEGIN(NoActionParser)

package it.fe.cassano.yeap.ccparser;
import java.io.BufferedReader;
import java.io.Reader;
import it.fe.cassano.yeap.ast.*;
import it.fe.cassano.yeap.tokenizer.ITokenizer;
import it.fe.cassano.yeap.parser.IParser;
import java.util.List;
import java.util.ArrayList;
import it.fe.cassano.yeap.visitors.ExpType;
import org.apache.commons.lang3.StringUtils;

public class NoActionParser implements ITokenizer, IParser
{

}

PARSER_END(NoActionParser)

SKIP :
{
  " "
| "\t"
}
TOKEN : /* SEPARATORS: */
{
 < SEPARATOR : ( "\r" | "\n" | ";" )+ >
}

TOKEN : /* OPERATORS */
{
  < PLUS : "+" >
| < MINUS : "-" >
| < MUL : "*" >
| < DIV : "/" >
| < ASSIGN : "=" >
}
TOKEN : /* SYNTAX HELPERS */
{ 
 < OBR: "(" >
| < CBR: ")" >
| <  COMMA: "," >
}

TOKEN : /* IDENTIFIERS: All identifier start with a capital char */
{
  < IDENT : (< ALPHA >|< UNDERSCORE >)(< ALPHA > |< UNDERSCORE > | < DIGIT > | < LOWCASE > )* >
| < #ALPHA : ["A"-"Z"] >
| < #UNDERSCORE : "_" >
}

TOKEN : /* IDENTVAL to denote the value of an identifier is used prefix $ like bash */
{
  < VALUEIDENT : < VAL ><IDENT > >
| < #VAL : "$" >
}

TOKEN : /* FUNCTION NAME: All function alias have first char lower case */
{
  < FNAME : < LOWCASE >(< ALPHA > | < DIGIT > | < LOWCASE >)* >
|  < #LOWCASE : ["a"-"z"] >
}

TOKEN : /* Calculator function alias definition %alias */
{
  < ALIAS: < DEF ><FNAME > > 
|  < #DEF : "%" >
}

TOKEN : /* Java function name: package.Class.functioname */
{
  < JFUN : (< LOWCASE > (<ALPHA >|< DIGIT >|<LOWCASE >)*< DOT >)+< ALPHA >(< ALPHA >|< DIGIT >|< LOWCASE >|< UNDERSCORE >)*< DOT >(< ALPHA >|< LOWCASE >|< UNDERSCORE >)(< ALPHA >| < DIGIT > | < LOWCASE >)* >
}

TOKEN : /* NUMBERS */
{
  < INTNUM : < DIGIT >(< ZERO >| < DIGIT >)* | < ZERO > >
| < #DIGIT : [ "1"-"9" ] >
| < #ZERO : "0" >
}

TOKEN : /* REAL NUMBERS */
{
  < REALNUM : < INTNUM > < DOT > (< ZERO > | < DIGIT >)* >   
| < #DOT : "." >
}

TOKEN : /* DATA TYPES */
{
  < DATATYPE : ":RealExp" | ":NumExp" >
}

/* VN */

public void initialGoal():
{}
{
	( assignment()| expr() | fundef()) (< SEPARATOR > initialGoal())?
}
   
/* Function alias definition */
void fundef():
{}
{
	<ALIAS><ASSIGN><JFUN><OBR> fundefparams() <CBR><DATATYPE>
}


void fundefparams():
{}
{
  < DATATYPE >  (  <COMMA> <DATATYPE>  )*
}



public void expr() :
{}
{
  ( term() (  (< PLUS >|< MINUS >) term())*)
}


void assignment() :
{}
{  	
    < IDENT > <ASSIGN > ( expr() | assignment())
}


void term():
{}
{
  (factor()  ( (< DIV >|< MUL >) factor() )*)
}


void factor():
{}
{
 (   
  <INTNUM>
  |
  < REALNUM >
  | 
    < VALUEIDENT > 
  | 
  < OBR > expr() < CBR >
  |
  function()
  | 
  unaryMinus()
 )
}


void function():
{}
{
  < FNAME >< OBR > fparams() < CBR >
}

void fparams():
{}
{
  param()( < COMMA >  param())*
}

void param():
{}
{
  expr()
}

void unaryMinus():
{}
{
  < MINUS >expr()
}

